name: Build Telegram X

on:
  workflow_dispatch: # exécution manuelle
  push:
    branches:
      - main

env:
  APP_ID: ${{ secrets.APP_ID }}
  APP_HASH: ${{ secrets.APP_HASH }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Generate local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          echo "ndk.dir=$ANDROID_NDK_HOME" >> local.properties
          cat local.properties

      - name: Inject APP_ID and APP_HASH
        run: |
          FILE=$(grep -R "class BuildVars" -n . | cut -d: -f1 | head -n1 || true)
          if [ -n "$FILE" ]; then
            echo "Using BuildVars file: $FILE"
            sed -i "s/public static final int APP_ID = .*/public static final int APP_ID = ${APP_ID};/" $FILE || true
            sed -i "s/public static final String APP_HASH = .*/public static final String APP_HASH = \"${APP_HASH}\";/" $FILE || true
          else
            echo "⚠️ Aucun BuildVars.java trouvé, fallback via build.gradle"
            candidate=$(find . -maxdepth 3 -type f -name "build.gradle.kts" | grep "app/build.gradle.kts" || true)
            if [ -n "$candidate" ]; then
              echo "Patching $candidate"
              perl -0777 -pe 's/(defaultConfig\s*\{)/$1\n        buildConfigField "int", "APP_ID", "${ENV{APP_ID}}"\n        buildConfigField "String", "APP_HASH", "\"${ENV{APP_HASH}}\""\n/s' -i $candidate
            fi
          fi

      - name: Build release APK(s)
        run: ./gradlew assembleRelease --no-daemon

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: telegram-x-apks
          path: '**/build/outputs/apk/**/*.apk'
          compression-level: 6
          overwrite: true
